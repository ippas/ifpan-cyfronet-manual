include required(classpath("application"))


backend {
    default = SLURM
    providers {
        SLURM {
            actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
            config {
                run-in-background = true
                runtime-attributes = """
                    String? docker
                    Float? memory_mb = 2048
                    Int? cpu = 1

                    String account = "plgsportwgs"
                    String partition = "plgrid-testing"
                    String time = "1:0:0"
                    # String SLURM_LOG="/net/archive/groups/plggneuromol/slurm-log/"
                    # String RIMROCK_WD="/net/archive/groups/plggneuromol/slurm-log/"

                    String TOOLS_DIR="/net/archive/groups/plggneuromol/tools/"
                """

                submit = """
                    if [ -z $proxy ]
                    then
                        echo "proxy variable is not set (proxy certificate)."
                        exit 1
                    fi

                    HEAD="#!/bin/bash
#SBATCH -A ${account}
#SBATCH -p ${partition}
#SBATCH -t ${time}
#SBATCH --cpus-per-task=${cpu}
#SBATCH --mem=${ceil(memory_mb)}MB
#SBATCH --output=${SLURM_LOG}/%j.out
#SBATCH --error=${SLURM_LOG}/%j.err

                    set -x"

                    SCRIPT=$(
                        ${TOOLS_DIR}/build-json.sh \
                        "$HEAD" \
                        "sg plggneuromol -c '${job_shell} ${script}'" \
                        "${RIMROCK_WD}"
                    )

                    curl -k -X POST \
                        --data-binary "$SCRIPT" \
                        --header "Content-Type:application/json" \
                        --header "PROXY:$proxy" \
                        https://rimrock.plgrid.pl/api/jobs
                """

                submit-docker = """
                    if [ -z $proxy ]
                    then
                        echo "proxy variable is not set (proxy certificate)."
                        exit 1
                    fi

                    if [ -z $SINGULARITY_CACHEDIR ]
                    then
                        echo "SINGULARITY_CACHEDIR variable is not set."
                        exit 1
                    else
                        mkdir -p $SINGULARITY_CACHEDIR
                    fi
                    module load plgrid/tools/singularity
                    export SINGULARITY_TMPDIR=$SCRATCH_LOCAL

                    # Create an exclusive filelock with flock
                    LOCK_FILE=$SINGULARITY_CACHEDIR/singularity_pull_flock
                    PULLING_STATUS=$(flock --exclusive $LOCK_FILE \
                        singularity exec --containall docker://${docker} \
                        echo "successfully pulled ${docker}!")
                    
                    re="successfully pulled"
                    if [[ $PULLING_STATUS =~ $re ]]
                    then
                        echo $PULLING_STATUS
                    else
                        echo "unsuccessful ${docker} pulling"
                        exit 1
                    fi

                    HEAD="#!/bin/bash
#SBATCH -A ${account}
#SBATCH -p ${partition}
#SBATCH -t ${time}
#SBATCH --cpus-per-task=${cpu}
#SBATCH --mem=${ceil(memory_mb)}MB
#SBATCH --output=${SLURM_LOG}/%j.out
#SBATCH --error=${SLURM_LOG}/%j.err

                    set -x

                    module load plgrid/tools/singularity
                    export SINGULARITY_CACHEDIR=$SINGULARITY_CACHEDIR
                    export SINGULARITY_TMPDIR=$SCRATCH_LOCAL"

                    SING="sg plggneuromol -c \
                        'singularity exec --containall \
                        --bind ${cwd}:${docker_cwd} \
                        docker://${docker} ${job_shell} ${docker_script}'"

                    SCRIPT=$(
                        ${TOOLS_DIR}/build-json.sh \
                        "$HEAD" \
                        "$SING" \
                        "${RIMROCK_WD}"
                    )

                    curl -k -X POST \
                        --data-binary "$SCRIPT" \
                        --header "Content-Type:application/json" \
                        --header "PROXY:$proxy" \
                        https://rimrock.plgrid.pl/api/jobs
                    
                """

            }
        }
    }
}
